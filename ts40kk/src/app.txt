// Jsx intrduction 

function App() {
  return (
    <div className="App">
      <h1>Adfar RAsheed</h1>
      {header}
      {header}
      {main}
      {header}
      {header}
      <h3>{name}</h3>
    </div>
  );
}
const myStyle = {
  color: "red",
  fontSize:"40px",
  backgroundColor:"pink",
  padding:"30px" 
}
const header = <h1 style={{color:"red",fontSize:"50px",backgroundColor:"blue"}}>LPU React Course</h1>
const main = <div style={myStyle}><h1>Welcome to resact course</h1><p>Started yesterday</p></div>
const name = "Adfar"
export default App;


function Header(){
  return (
    <div>
      <h1>Header Component</h1>
      <Main/>
    </div>
  )
}
function Main(){
  return (
    <div>
      <h1>MAin Component</h1>
    </div>
  )
}
function App(){
  return (
    <div>
      <h1>Adfar Rasheed</h1>
      <Header/>
      <Header/>
      <Header/>
      <Header/>
      
    </div>
  )
}
export default App;

//<div class="progress">
    <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" role="progressbar"
        style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">import About from "./components/About"
function App(props){
  var name="Adfar Rasheed";
  var age =27;
  var salary=2000;
  return (
    <div>
      <h1>Adfar Rasheed</h1>
      <About naam={name} umar={age} tankha={salary} gender="male"/>
      
    </div>
  )
}
export default App;</div>
</div>

import React from 'react'
import Propsdata from './components/Propsdata'

function App() {
  var obj ={
    name:"React",
    start:19,
    end:30
  }
  return (
    <div>
      <Propsdata age={24} data = {["Adfar","Lpu","newton","Adfar","React"]} obj={obj}/>
      <h1>{obj.name}</h1>
    </div>
  )
}

export default App

import React from 'react'
import Dialog from './components/Dialog'
import Child from './Child'

function App() {
  return (
    <div>
      <Dialog>
        <div>
          <h1>Hello welcome</h1>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit quasi sint omnis et, architecto consectetur nulla non! Repudiandae ea recusandae dicta doloremque odio quasi consequatur doloribus veritatis, quos quaerat eum fugit, incidunt accusantium officia alias cum sunt nihil quibusdam iusto, laboriosam voluptatum. Facilis nesciunt at sit dolorum voluptate illum, nihil itaque, est corporis aspernatur veritatis dolor eligendi perspiciatis eveniet eum iusto facere ipsam! Est veniam, quia non at, reiciendis rem, quae praesentium laudantium dolor facilis cumque in neque voluptatibus recusandae quisquam incidunt ipsa exercitationem fugiat nesciunt hic cupiditate repudiandae laborum perspiciatis. Dolorum iste, dolor harum placeat itaque debitis sunt reiciendis laborum eveniet animi repellat provident at aperiam et, vitae autem enim ullam veniam numquam ipsa quasi necessitatibus recusandae molestias. Assumenda illum repudiandae velit praesentium nesciunt itaque corporis deleniti sunt unde reiciendis error quod suscipit facilis, rerum eos. Eveniet, quis facilis perferendis inventore unde ut non dolor perspiciatis id, ea impedit nobis, nostrum quibusdam accusamus minus! Atque adipisci recusandae ipsam, aspernatur consequatur quibusdam rerum libero ex maxime at vitae exercitationem autem? Alias in inventore sint dolores debitis illo consectetur veniam fugit quam numquam. Sint, provident nostrum itaque facere eveniet facilis quod pariatur tenetur reprehenderit fuga. Possimus quaerat hic eos fugiat pariatur, at modi dolores? Minima harum, soluta commodi mollitia illum adipisci unde ab quia facilis deserunt dignissimos omnis est totam magnam accusamus sit dolorum voluptatum ratione! Dolorem, dolores nihil temporibus at aperiam unde fugiat, esse architecto repudiandae fuga debitis velit, libero ipsa quidem cum maxime dolor iste porro voluptatum iusto cupiditate sit deleniti illo. Sint, quo. Magnam esse beatae odit officiis tempora laboriosam velit, iure perspiciatis vel obcaecati doloribus provident earum mollitia voluptates omnis odio consequuntur assumenda libero fugiat id unde illo facilis fuga! Laudantium, asperiores? Ipsum, possimus? Dolorum sapiente doloribus reprehenderit numquam labore, perferendis vero, quaerat laboriosam obcaecati, deleniti nobis!</p>
          <small>hello welcomehgsdhug</small>
        </div>
        <div>
          <h1>Hello welcome</h1>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit quasi sint omnis et, architecto consectetur nulla non! Repudiandae ea recusandae dicta doloremque odio quasi consequatur doloribus veritatis, quos quaerat eum fugit, incidunt accusantium officia alias cum sunt nihil quibusdam iusto, laboriosam voluptatum. Facilis nesciunt at sit dolorum voluptate illum, nihil itaque, est corporis aspernatur veritatis dolor eligendi perspiciatis eveniet eum iusto facere ipsam! Est veniam, quia non at, reiciendis rem, quae praesentium laudantium dolor facilis cumque in neque voluptatibus recusandae quisquam incidunt ipsa exercitationem fugiat nesciunt hic cupiditate repudiandae laborum perspiciatis. Dolorum iste, dolor harum placeat itaque debitis sunt reiciendis laborum eveniet animi repellat provident at aperiam et, vitae autem enim ullam veniam numquam ipsa quasi necessitatibus recusandae molestias. Assumenda illum repudiandae velit praesentium nesciunt itaque corporis deleniti sunt unde reiciendis error quod suscipit facilis, rerum eos. Eveniet, quis facilis perferendis inventore unde ut non dolor perspiciatis id, ea impedit nobis, nostrum quibusdam accusamus minus! Atque adipisci recusandae ipsam, aspernatur consequatur quibusdam rerum libero ex maxime at vitae exercitationem autem? Alias in inventore sint dolores debitis illo consectetur veniam fugit quam numquam. Sint, provident nostrum itaque facere eveniet facilis quod pariatur tenetur reprehenderit fuga. Possimus quaerat hic eos fugiat pariatur, at modi dolores? Minima harum, soluta commodi mollitia illum adipisci unde ab quia facilis deserunt dignissimos omnis est totam magnam accusamus sit dolorum voluptatum ratione! Dolorem, dolores nihil temporibus at aperiam unde fugiat, esse architecto repudiandae fuga debitis velit, libero ipsa quidem cum maxime dolor iste porro voluptatum iusto cupiditate sit deleniti illo. Sint, quo. Magnam esse beatae odit officiis tempora laboriosam velit, iure perspiciatis vel obcaecati doloribus provident earum mollitia voluptates omnis odio consequuntur assumenda libero fugiat id unde illo facilis fuga! Laudantium, asperiores? Ipsum, possimus? Dolorum sapiente doloribus reprehenderit numquam labore, perferendis vero, quaerat laboriosam obcaecati, deleniti nobis!</p>
          <small>hello welcomehgsdhug</small>
        </div>
        <Child/>
      </Dialog>
    </div>
  )
}

export default App

//counter App
import React from 'react'
import {useState} from "react";
function App() {
  const [count,setCount] = useState(0);
  const [number,setNumber] = useState(100);
  function adfar(){
    console.log("Adfar")
  }
  console.log("lpu")
  function handleCount(){
    setCount(count+1);
    setNumber(number-1);
  }
  return (
    <div>
      <button onClick={adfar}>ADfar</button>
      <h1>{count}</h1>
      <button onClick={handleCount}>Increment</button>
      <h1>{number}</h1>
      <button onClick={handleCount}>Decrement</button>
      <button onClick={()=>{setCount((c)=>c+1);setCount(c=>c+1);setCount(c=>c+1)}}>Increment by 3</button>
    </div>
  )
}

export default App

//themechanger
import React, { useState } from 'react'
import "./App.css"
import Themechanger from './components/Themechanger';
import Conditionalrendering from './components/Conditionalrendering';
export default function App() {
  const [text,setText] = useState("Dark");
  const [backgroundColor,setBackgroundColor] = useState("white");
  const [color,setColor] = useState("black");
  function handleColor(){
    if(text === "Dark"){
        setText("Light")
        setBackgroundColor("black");
        setColor("white");
    } else {
      setText("Dark");
      setBackgroundColor("white");
      setColor("black");
    }
  }
  return (
    <>
    <div className='main' style={{backgroundColor:backgroundColor,color:color}}>
      <h1>Hello World!</h1>
      <button onClick={()=>(handleColor())}>{text}</button>
      <Themechanger/>
    </div>
    <Conditionalrendering/>
    </>
    
  )
}

//themechanger 
import React, { useState } from 'react'
import "./App.css"
import Themechanger from './components/Themechanger';
import Conditionalrendering from './components/Conditionalrendering';
export default function App() {
  const [condition,setCondition] = useState(true);
  
  function handleColor(){
    setCondition(!condition)
  }
  return (
    <>
    <div className={condition?"active":"not-active"} style={{backgroundColor:condition?"white":"black",color:condition?"black":"white"}}>
      <h1>Hello World!</h1>
      <button onClick={()=>(handleColor())}>{condition?"Dark":"Light"}</button>
      <Themechanger/>
      {-10 && (
        <h1>Hello Adfar</h1>
      )}
    </div>
    <Conditionalrendering/>
    </>
    
  )
}


form with spread operator 

import React, { useState } from 'react'

function App() {
  // const [input,setInput] = useState("");
  // const [password,setPassword] = useState("");
  // const [email,setEmail] = useState("");

  const [condition,setCondition]  =useState(false);
  const [list,setList] = useState({
    name:"",
    email:"",
    password:""
  })
  function handleSubmit(e){
    e.preventDefault();
    setCondition(true);
  }
  return (
    <div>
      <form onSubmit={handleSubmit}>
        <input type="text"  value={list.name} 
        onChange={(e)=>setList((prev)=>({...prev,name:e.target.value}))}/>
        <input type="password"  value={list.password} 
        onChange={(e)=>{setList((prev)=>({...prev,password:e.target.value}))}}/>
        <input type="email" value={list.email} 
        onChange={(e)=>setList((prev)=>({...prev,email:e.target.value}))} />
        <input type="submit" value="Submit" />
        {condition && (
          <>
            <h1>Your Name is:{list.name}</h1>
          <h1>Your Password is:{list.password}</h1>
          <h1>Your Email is:{list.email}</h1>
          </>
        
        )}
        
      </form>
    </div>
  )
}

export default App



useEffectr Hook 
import React, { useEffect, useState } from 'react'

function App() {
  const [count,setCount]  = useState(0);
  const [number,setNumber] = useState(100);
  useEffect(()=>{
    console.log("useEffect")
  },[count,number])
  return (
    <div>
      <h1>{count}</h1>
      <button onClick={()=>setCount(count+1)}>Increment</button>
      <h1>{number}</h1>
      <button onClick={()=>setNumber(number-1)}>Decrement</button>

    </div>
  )
}

export default App


//Timer 
import React, { useState,useEffect } from 'react'

export default function App() { 
  const [ timer,setTimer] = useState(0);
  useEffect(()=>{
     setTimeout(()=>{
      setTimer(new Date().toLocaleString())
     },1000)
  },[timer])
  return (
    <div>
      {timer}
    </div>
  )
}


//useReducer

import React, { useReducer, useState } from 'react'
import Background from './Background'
const reducerFunction =(state,action)=>{
   console.log(state,action)
   if(action === "one"){
    return {count:state.count+1}
   } else if(action === "two"){
    return {count:state.count+2}
   } else if(action === "three"){
    return {count:state.count+3}
   }
  return state;
}
const App = () => {
  // const [count,setCount] = useState(0)
  const [state,dispatch] = useReducer(reducerFunction,{count:0})
  return (
    <div>
      <h1>{state.count}</h1>
      <button onClick={()=>dispatch("one")}>Increment One</button>
      <button onClick={()=>dispatch("two")}>Increment Two</button>
      <button onClick={()=>dispatch("three")}>Increment Three</button>
      <Background/>
    </div>
  )
}

export default App


context api 
import React, { useState } from 'react'
import Comp1 from './components/contextAPI/Comp1'
import StateProvider from './components/contextSTate/StateProvider'
const name = React.createContext()
const lastName = React.createContext()
export default function App() {
  const [state,setState] = useState("Hello")
  return (
    <div>
      <name.Provider value={{state,setState}}>
        <lastName.Provider value="React JS">
         <Comp1/>
        </lastName.Provider>
      </name.Provider>
      <StateProvider/>
    </div>
  )
}
export {name,lastName}


//react router dom 
import React from 'react'
import { BrowserRouter, Route, Routes } from 'react-router-dom'
import Home from './Routes/Home'
import Abput from './Routes/Abput'
import Contact from './Routes/Contact'
import Blog from './Routes/Blog'
import User from './Routes/User'
import UserDetails from './Routes/UserDetails'
import Adhaaaar from './Routes/Adhaaaar'
import List from './Routes/List'
import Search from './Routes/Search'
import MainHoome from './Routes/MainHoome'
export default function App() {
  return (
    <div>
      <BrowserRouter>
         <Routes>
           <Route path='/' element={<MainHoome/>}>
              <Route index element={<Home/>}/>
              <Route path='/about' element={<Abput/>}/>
              <Route path='/contact' element={<Contact/>}>
                 <Route path='list' element={<List/>}/>
                 <Route path='search' element={<Search/>}/>
              </Route>
              <Route path='/blog' element={<Blog/>}/>
              <Route path='/user' element={<User/>}/>
              <Route path='/user/:userID' element={<UserDetails/>}/>
              <Route path='/user/:userID/adhaar/:number' element={<Adhaaaar/>}/>
           </Route>
           
         </Routes>
      </BrowserRouter>
    </div>
  )
}


//pokemon app.js 
import React from 'react'
import { useState } from 'react';
import { useEffect } from 'react';

export default function App() {
  const [allPokemons,setAllPokemons] = useState([])
  const getAllPokemons =async ()=>{
     const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=20");
     const data = await res.json()
     console.log(data);
     function createPokeMon(x){
        x.map(async (item)=>{
          const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${item.name}`)
          const data = await response.json()
          console.log(data);
          setAllPokemons(prev=>[...prev,data])
        })
     }
     createPokeMon(data.results)
  }
  useEffect(()=>{
    getAllPokemons()
  },[])
  return (
    <div>

    </div>
  )
}


//localstorage 

import React from 'react'
import { useState } from 'react'

export default function App() {
  const [inputs,setInputs] = useState({
    name:"",
    email:"",
    password:""
  })
  const handleChange=(e)=>{
     const {name,value} = e.target;
     setInputs({...inputs,[name]:value})
  }
  const handleSubmit =(e)=>{
    e.preventDefault()
    // localStorage.setItem("userInfo",JSON.stringify(inputs))
    localStorage.setItem("name",inputs.name)
    localStorage.setItem("email",inputs.email)
    localStorage.setItem("pass",inputs.password)
    setInputs({name:"",email:"",password:""})
  }
  const handleRemove=()=>{
    localStorage.removeItem("name")
    localStorage.removeItem("email")
    localStorage.removeItem("pass")
  }
  return (
    <div>
    
        <form onSubmit={handleSubmit}>
          <input type="text" value={inputs.name} name='name'
          onChange={handleChange}/> <br /><br />
          <input type="email" value={inputs.email} name='email'
          onChange={handleChange}/><br/> <br />
          <input type="password" value={inputs.password} name='password'
          onChange={handleChange}/> <br /> <br />
          <input type="submit" value="SignUp" />
        </form>
        <button onClick={handleRemove}>Remove</button>
        {localStorage.getItem("name") && (
          <h1>Name :{localStorage.getItem("name")}</h1>
        )}
   
     
      
    </div>
  )
}


import React, { useMemo, useState } from 'react'
import Istcomponent from './Efficiency/Istcomponent'

export default function App() {
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(1000)
  console.log("Parent app component");
  // useMemo(()=>{

  // },[])
  const isEven = useMemo(()=>{
    
      let i=0;
      while(i<2000000000) i++;
      return count %2 === 0;
    
  },[count])
  return (
    <div>
  <p>Adfar</p>
      <h1>countt: {count}</h1>
      <button onClick={()=>setCount(count+1)}> Increment</button>
      <h1>{isEven?"EVEN":"ODD"}</h1>
      <h1>Number: {number}</h1>
      <button onClick={()=>setNumber(number-1)}>Decrement</button>
      <Istcomponent name={20} isEven={isEven}/>

    </div>
  )
}


//useCallback 

import React from 'react'
import { useCallback } from 'react';
import { useState } from 'react'
const x = new Set()
export default function App() {
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(1000);
  const handleIncrement =useCallback(
    ()=>{
      setCount(count+1)
    },[count]
  ) 
  const handleDecrement =useCallback(
    ()=>{
      setCount(count-1)
    },[count]
  ) 
  const handleIncrementnumber = useCallback(()=>{
    setNumber(number+1)
  },[number])
  const handleDecrementnumber =useCallback(()=>{
    setNumber(number-1)
  },[number])
  x.add(handleDecrement)
  x.add(handleIncrement)
  x.add(handleIncrementnumber)
  x.add(handleDecrementnumber)
  alert(x.size)
  return (
    <div>
      <h1>{count}</h1>
      <h1>{number}</h1>
      <button onClick={handleIncrement}>Increment count</button>
      <button onClick={handleDecrement}>Decrement count</button>
      <button onClick={handleIncrementnumber}>increment number</button>
      <button onClick={handleDecrementnumber}>Decrement number</button>
    </div>
  )
}


//portals 
import React, { useState } from 'react'
import Modal from './Modal'
import "./App.css"
export default function App() {
  const [condition,setCondition] = useState(false)
  return (
    <div className='container'>
      <h1>Home Page</h1>
      <button onClick={()=>setCondition(true)}>Show Modal</button>
      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Deserunt, consequatur est. Omnis unde autem sapiente sed cupiditate facere maxime sunt doloribus, deserunt quaerat, repudiandae id et numquam. Neque, repellendus voluptate.</p>
      <div>
       <Modal condition={condition}>
        <div>
          <h1>Modal component</h1>
          <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Saepe tempora vitae provident delectus, animi adipisci, amet reiciendis earum quia illo aspernatur dolores quibusdam porro necessitatibus odit illum voluptatibus itaque dignissimos totam consequatur sapiente praesentium in et? Asperiores ullam sapiente earum.</p>
        </div>
       </Modal>
      </div>
    </div>
  )
}

//lazyloading 
import React, { Suspense, lazy } from 'react'
import Adfar from './Efficiency/LazyLoading/Adfar';
const Compo1 = lazy(()=>import("./Efficiency/LazyLoading/Compo1"));
const Compo2 = lazy(()=>import("./Efficiency/LazyLoading/Compo2"));


export default function App() {
  return (
    <div>
        <Suspense fallback={<div>Please wait.....</div>}>
          <Compo1/>
        </Suspense>
        <Suspense fallback={<h1>Wait karo.....</h1>}>
            <Compo2/>
        </Suspense>
        <Adfar/>
    </div>
  )
}


//errorboundary 

import React from 'react'
import Counter from './Efficiency/ErrorBoundary/Counter'
import Errorbounday from './Efficiency/ErrorBoundary/Errorbounday'

export default function App() {
  return (
    <div>
        <Errorbounday>
            <Counter/>
        </Errorbounday>
        <Errorbounday>
            <Counter/>
        </Errorbounday>
        <Errorbounday>
            <Counter/>
        </Errorbounday>
        <h1>Hello welocme</h1>
    </div>
  )
}


//refs 
import React, { useRef, useState } from 'react'

export default function App() {
  const [input,setInput] = useState("")
  const name  =  useRef()
  const email = useRef()
  const pass = useRef()
  const handleSubmit=(e)=>{
    e.preventDefault()
    console.log(name.current.value,email.current.value,pass.current.value)
  }
  const handleChange=(e)=>{
    let value = e.target.value;
    setInput((prevValue)=>({...prevValue,[name.current.id]:value}))
  }
  
  return (
    <div>
      <form onSubmit={handleSubmit}>
        <input type="text" ref={name}  onChange={handleChange}/>
        <input type="email" ref={email} />
        <input type="password" ref={pass} />
        <button type="submit">Submit</button>
      </form>
      {name.current && <h1>Name:{name.current.value}</h1> }
      {email.current && <h1>Email:{email.current.value}</h1>}
     {pass.current &&  <h1>Password:{pass.current.value}</h1>}
      
    </div>
  )
}

// Refs 

import React, { useEffect, useRef } from 'react'

export default function App() {
  const inputRef  = useRef();
  const divRef = useRef();
  const handleDiv = ()=>{
    divRef.current.innerHTML ="Hello Welcome React"
  }
  useEffect(()=>{
    inputRef.current.focus()
  },[])
  return (
    <div>
      <input type="text" />
      <input type="text"  />
      <input type="text" ref={inputRef}  />
      <input type="text"  />
      <div ref={divRef}>ADfar</div>
      <button onClick={() => console.log(divRef.current)} >click me</button>
      <button onClick={()=>handleDiv()}>Chnage DIv Contebnt</button>
    </div>
  )
}
